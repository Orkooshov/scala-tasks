[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Orkooshov\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Orkooshov\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 105.7295ms
[debug]       Load.loadUnit: defsScala took 0.3437ms
[debug] [Loading] Scanning directory C:\Users\Orkooshov\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Orkooshov\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.9828 ms
[debug]           Load.resolveProject(global-plugins) took 45.3222ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Orkooshov\.sbt\1.0\plugins, plugins: List(<none>))) took 89.7142ms
[debug] [Loading] Done in C:\Users\Orkooshov\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 113.8964ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2422ms
[debug]     Load.loadUnit(file:/C:/Users/Orkooshov/.sbt/1.0/plugins/, ...) took 230.3763ms
[debug]   Load.apply: load took 427.7841ms
[debug]   Load.apply: resolveProjects took 6.2529ms
[debug]   Load.apply: finalTransforms took 68.504ms
[debug]   Load.apply: config.delegates took 14.8712ms
[debug]   Load.apply: Def.make(settings)... took 526.9809ms
[debug]   Load.apply: structureIndex took 120.8691ms
[debug]   Load.apply: mkStreams took 1.6453ms
[info] loading global plugins from C:\Users\Orkooshov\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4449.3592ms
[debug]           Load.loadUnit: plugins took 24.4166ms
[debug]           Load.loadUnit: defsScala took 0.0071ms
[debug] [Loading] Scanning directory C:\Users\Orkooshov\Documents\source\IntellijIDEA\Tasks\project
[debug]             Load.loadUnit: mkEval took 5.1473ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Orkooshov\Documents\source\IntellijIDEA\Tasks\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2896 ms
[info] loading settings for project tasks-build from idea.sbt ...
[debug]               Load.resolveProject(tasks-build) took 3.8644ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tasks-build, base: C:\Users\Orkooshov\Documents\source\IntellijIDEA\Tasks\project, plugins: List(<none>))) took 6.8134ms
[debug] [Loading] Done in C:\Users\Orkooshov\Documents\source\IntellijIDEA\Tasks\project, returning: (tasks-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2369.0933ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.6772ms
[debug]         Load.loadUnit(file:/C:/Users/Orkooshov/Documents/source/IntellijIDEA/Tasks/project/, ...) took 2400.1252ms
[debug]       Load.apply: load took 2401.8021ms
[debug]       Load.apply: resolveProjects took 0.1163ms
[debug]       Load.apply: finalTransforms took 11.6591ms
[debug]       Load.apply: config.delegates took 0.4019ms
[debug]       Load.apply: Def.make(settings)... took 86.8735ms
[debug]       Load.apply: structureIndex took 35.6215ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\Orkooshov\Documents\source\IntellijIDEA\Tasks\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4334.5683ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\Orkooshov\Documents\source\IntellijIDEA\Tasks
[debug]       Load.loadUnit: mkEval took 0.3832ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.1448 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 66.2448ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Orkooshov\Documents\source\IntellijIDEA\Tasks, plugins: List(<none>))) took 75.0598ms
[debug] [Loading] Done in C:\Users\Orkooshov\Documents\source\IntellijIDEA\Tasks, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2591.3831ms
[debug]     Load.loadUnit: cleanEvalClasses took 39.0269ms
[debug]   Load.loadUnit(file:/C:/Users/Orkooshov/Documents/source/IntellijIDEA/Tasks/, ...) took 6966.1866ms
[debug] Load.apply: load took 6968.4568ms
[debug] Load.apply: resolveProjects took 0.1435ms
[debug] Load.apply: finalTransforms took 50.6819ms
[debug] Load.apply: config.delegates took 0.848ms
[debug] Load.apply: Def.make(settings)... took 139.2741ms
[debug] Load.apply: structureIndex took 51.3881ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to Tasks (in build file:/C:/Users/Orkooshov/Documents/source/IntellijIDEA/Tasks/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 9477 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 9477, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Tasks (in build file:/C:/Users/Orkooshov/Documents/source/IntellijIDEA/Tasks/)
[debug] > Exec(idea-shell, None, None)
